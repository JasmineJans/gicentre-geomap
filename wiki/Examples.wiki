=Examples=

<wiki:toc />

Here are some examples of geoMap in action. To use them, you will need to:

 * Locate the world data. You will find _world.shp_, _world.dbf_ and _world.shx_ in the {{{data}}} directory of the geoMap library. Open this directory and drag and drop each file into the Processing development environment.
 * Copy and paste the code into your Processing development environment.

==Draw a simple world map==

This sketch draws a simple world map.

{{{
import org.gicentre.geomap.*;

GeoMap geoMap;

void setup()
{
  size(800, 400);
  smooth();
  geoMap = new GeoMap(this);
  geoMap.readFile("world");
}

void draw()
{
  background(180, 210, 240);
  fill(150, 190, 150);
  geoMap.draw();
}
}}}

===Explanation===

We import the geoMap classes:

<code language="processing">import org.gicentre.geomap.*;</code>

We declare a variable called {{{geoMap}}} to store our map:

<code language="processing">GeoMap geoMap;</code>

In {{{setup()}}} we first set the size of our sketch and turn on smoothing. (Remember that {{{size()}}} must be the first line in {{{setup()}}}.) We then initialise our map. Notice how we pass the current sketch to our map using {{{this}}}:

<code language="processing">geoMap = new GeoMap(this);</code>

We read the shapefile containing the data representing the world. Notice how the file name does not include the extension:

<code language="processing">geoMap.readFile("world");</code>

In {{{draw()}}} we first set the background colour (blue) and the fill colour (green) of our sketch. We then draw our map:

<code language="processing">geoMap.draw();</code>

Finally, we click the run button and admire our world map.

[http://gicentre-geomap.googlecode.com/svn/trunk/GeoMap/examples/Simple_world_map/Simple_world_map.png]

==Draw a simple interactive world map==

This sketch adds interaction to the [#Draw_a_simple_world_map simple world map].

{{{
import org.gicentre.geomap.*;

GeoMap geoMap;

void setup()
{
  size(800, 400);
  smooth();
  geoMap = new GeoMap(this);
  geoMap.readFile("world");
}

void draw()
{
  background(180, 210, 240);
  fill(150, 190, 150);
  geoMap.draw();

  int id = geoMap.getID(mouseX, mouseY);
  if (id != -1)
  {
    fill(180, 120, 120);
    geoMap.draw(id);
  }
}
}}}

===Explanation===

In {{{draw()}}} we get the id of the country under the mouse and store it in a variable called {{{id}}}. If the mouse isn't over a country, {{{id}}} will be {{{-1}}}.

<code language="processing">int id = geoMap.getID(mouseX, mouseY);</code>

We test to see whether {{{id}}} is not {{{-1}}}. If this is the case, we set the fill colour (red) and draw the country that matches {{{id}}}.

{{{
if (id != -1)
{
  fill(180, 120, 120);
  geoMap.draw(id);
}
}}}

Finally, we click the run button and admire our interactive world map.

[http://gicentre-geomap.googlecode.com/svn/trunk/GeoMap/examples/Simple_interactive_world_map/Simple_interactive_world_map.png]

==Query a simple interactive world map==

This sketch builds on the [#Draw_a_simple_interactive_world_map simple interactive world map]. As well as highlighting, country names are displayed at the top of the sketch.

{{{
/*
  Draws a simple interactive world map that you can query.
  It uses the giCentre's geoMap library.
  Iain Dillingham, 18th January 2011.
*/
import org.gicentre.geomap.*;

GeoMap geoMap;

void setup()
{
  size(800, 400);
  smooth();
  geoMap = new GeoMap(this);
  geoMap.readFile("world");
  geoMap.getAttributes().writeAsTable(5);
}

void draw()
{
  background(180, 210, 240);
  stroke(0);
  fill(150, 190, 150);
  geoMap.draw();

  int id = geoMap.getID(mouseX, mouseY);
  if (id != -1)
  {
    fill(180, 120, 120);
    geoMap.draw(id);
  }

  noStroke();
  fill(255, 192);
  rect(0, 0, width, 20);

  if (id != -1)
  {
    String name = geoMap.getAttributes().getString(id, 4);
    fill(0);
    textAlign(LEFT, CENTER);
    text(name, 0, 0, width, 20);
  }
}
}}}

===Explanation===

We write the first five lines of our map's attribute table to the console in the Processing development environment. We will need this information later:

<code language="processing">geoMap.getAttributes().writeAsTable(5);</code>

In {{{draw()}}} we set the stroke colour (black) before we draw our map. This is because we turn off the stroke later, when we draw a semi-transparent white rectangle at the top of the sketch:

{{{
stroke(0);
...
noStroke();
fill(255, 192);
rect(0, 0, width, 20);
}}}

We test to see whether {{{id}}} is not {{{-1}}}. If this is the case, we get the name of the country under the mouse and store it in a variable called {{{name}}}. (We know that country names are in column {{{4}}} of our map's attribute table because we looked at the console in the Processing development environment.)

We set the fill colour and the text alignment, and draw the country name to the screen:

{{{
fill(0);
textAlign(LEFT, CENTER);
text(name, 0, 0, width, 20);
}}}

Finally, we click the run button and admire our interactive world map.

[http://gicentre-geomap.googlecode.com/svn/trunk/GeoMap/examples/Query_world_map/Query_world_map.png]

==Draw a choropleth map==

This sketch draws a [http://en.wikipedia.org/wiki/Choropleth_map choropleth map]. It's more advanced than the previous examples. You will need to locate _world.shp_, _world.dbf_ and _world.shx_ in the {{{data}}} directory and _bad_teeth.tsv_ in the {{{examples/Bad_teeth/data}}} directory. Notice how data are loaded into a {{{Table}}} from an external file and how {{{geoMap.getFeatures().keySet()}}} is used to iterate over the map's features.

[http://gicentre-geomap.googlecode.com/svn/trunk/GeoMap/examples/Bad_teeth/Bad_teeth.png]

{{{
/*
  Draws a choropleth map of bad teeth data from gapminder.org.
  It uses the giCentre's geoMap library.
  Iain Dillingham, 2nd February 2012.
*/
import org.gicentre.geomap.*;

GeoMap geoMap;
Table tabBadTeeth;
color cbGreysC, cbGreysF, cbGreysI, cbBluesC, cbBluesI;
float dataMax, dataMin;

void setup()
{
  size(820, 440);
  smooth();
  noLoop();

  geoMap = new GeoMap(10, 10, width-20, height-40, this);
  geoMap.readFile("world");
  tabBadTeeth = new Table("bad_teeth.tsv", this);

  // Colours from http://colorbrewer.org/
  cbGreysC = color(240);
  cbGreysF = color(189);
  cbGreysI = color(99);
  cbBluesC = color(222, 235, 247);
  cbBluesI = color(49, 130, 189);

  // Maximum and minimum data values
  dataMax = -MAX_FLOAT;
  dataMin = +MAX_FLOAT;

  for (int row = 0; row < tabBadTeeth.getRowCount(); row++)
  {
    dataMax = max(dataMax, tabBadTeeth.getFloatAt(row, 1));
    dataMin = min(dataMin, tabBadTeeth.getFloatAt(row, 1));
  }

  // Fonts
  PFont font = createFont("Blokletters-Balpen", 10);
  textFont(font);
}

void draw()
{
  background(255);
  stroke(cbGreysF);
  strokeWeight(0.5);

  // Draw countries
  for (int id : geoMap.getFeatures().keySet())
  {
    String country = geoMap.getAttributes().getString(id, 3);
    String badTeeth = tabBadTeeth.getString(country, 1);

    if (badTeeth.equals("")) // No data
    {
      fill(cbGreysC);
    }
    else // Data
    {
      float normBadTeeth = norm(float(badTeeth), dataMin, dataMax);
      fill(lerpColor(cbBluesC, cbBluesI, normBadTeeth));
    }

    geoMap.draw(id); // Draw country
  }

  // Draw title text
  fill(cbGreysI);
  String title = "Number of bad teeth per 12 year-old child (gapminder.org)";
  textAlign(LEFT, CENTER);
  text(title, 10, height-30, width-20, 30);

  // Draw the frame line
  strokeWeight(1);
  noFill();
  rect(10, 10, width-20, height-40);
}

void keyPressed()
{
  // Save a copy of the map
  if (key == 'c')
  {
    save("Bad_teeth.png");
  }
}
}}}